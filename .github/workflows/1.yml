# name: Simplified Deploy to AWS ECS

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ secrets.AWS_REGION }}

#     - name: Log in to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1

#     - name: Build, tag, and push Docker image
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
#         IMAGE_TAG: latest
#       run: |
#         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

#     - name: Create task definition file
#       run: |
#         echo "Creating task-def.json"
#         jq --arg IMAGE "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" '.containerDefinitions[0].image=$IMAGE' task-definition.json > task-def.json
#         cat task-def.json

#     - name: Debug - List files
#       run: |
#         echo "Listing files in the current directory:"
#         ls -al

#     - name: Debug - Print working directory
#       run: |
#         echo "Current working directory:"
#         pwd

#     - name: Register task definition
#       run: |
#         echo "Registering task definition"
#         aws ecs register-task-definition \
#           --cli-input-json file://task-def.json \
#           --region ${{ secrets.AWS_REGION }}

#     - name: Deploy to ECS
#       run: |
#         echo "Deploying to ECS"
#         aws ecs update-service \
#           --cluster ${{ secrets.ECS_CLUSTER }} \
#           --service ${{ secrets.ECS_SERVICE }} \
#           --force-new-deployment
